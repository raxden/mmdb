# This is a basic workflow to help you get started with Actions

name: Continuous Integration

# Workflow events: Controls when the action will run.
# More info: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Increment this to invalidate the cache.
  CACHE_VERSION: 1
  # Enable debug for the `gradle-build-action` cache operations
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  info:
    name: Workflow Information
    runs-on: ubuntu-latest

    steps:
      - name: Basic Information
        run: |
          echo "The job was automatically triggered by a ${{ github.event_name }} event with ${{ github.event.action }} action."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "  "
          echo "github.ref = ${{ github.ref }}"
          echo "github.sha = ${{ github.sha }}"
          echo "  "

  checkstyle:
    name: Check code (detekt)
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Load secrets
        uses: ./.github/actions/load_secrets
        with:
          tmdb-token-v3: ${{ secrets.TMDB_TOKEN_V3 }}
          tmdb-token-v4: ${{ secrets.TMDB_TOKEN_V4 }}

      - name: Check code via Detekt
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt --stacktrace --scan

  assemble:
    needs: [ checkstyle ]
    if: success()
    name: Assemble apk
    runs-on: ubuntu-latest
    strategy:
      matrix:
        buildType: [ "Debug", "Release" ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Load secrets
        uses: ./.github/actions/load_secrets
        with:
          tmdb-token-v3: ${{ secrets.TMDB_TOKEN_V3 }}
          tmdb-token-v4: ${{ secrets.TMDB_TOKEN_V4 }}

      - name: Assemble APK ${{ matrix.buildType }}
        uses: ./.github/actions/assemble_apk
        with:
          buildType: ${{ matrix.buildType }}
          signingFiles: ${{ secrets.RELEASE_FILES }}

  test:
    needs: [ checkstyle ]
    if: success()
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Load secrets
        uses: ./.github/actions/load_secrets
        with:
          tmdb-token-v3: ${{ secrets.TMDB_TOKEN_V3 }}
          tmdb-token-v4: ${{ secrets.TMDB_TOKEN_V4 }}

      - name: Unit tests
        uses: ./.github/actions/unit_tests

  instrumental-test:
    needs: [ checkstyle ]
    if: success()
    name: Run Android Instrumental Tests
    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 60
    strategy:
      matrix:
        arch: [ x86_64 ]
        target: [ google_apis ]
        channel: [ stable ]
        api-level: [ 29 ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Load secrets
        uses: ./.github/actions/load_secrets
        with:
          tmdb-token-v3: ${{ secrets.TMDB_TOKEN_V3 }}
          tmdb-token-v4: ${{ secrets.TMDB_TOKEN_V4 }}

      - name: Launch Instrumental tests
        uses: ./.github/actions/instrumental_tests
        with:
          arch: ${{ matrix.arch }}
          target: ${{ matrix.target }}
          channel: ${{ matrix.channel }}
          api-level: ${{ matrix.api-level }}

  reports:
    needs: [ test, instrumental-test ]
    if: success()
    name: Generate reports
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Load secrets
        uses: ./.github/actions/load_secrets
        with:
          tmdb-token-v3: ${{ secrets.TMDB_TOKEN_V3 }}
          tmdb-token-v4: ${{ secrets.TMDB_TOKEN_V4 }}

      - name: Generate jacoco reports and upload to codecov
        uses: ./.github/actions/generate_reports
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy-firebase:
    needs: [ test, instrumental-test ]
    if: success() && github.ref == 'refs/heads/master'
    name: Build & Upload to Firebase App Distribution
    runs-on: ubuntu-latest
    strategy:
      matrix:
        buildType: [ "Debug", "Release" ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup machine
        uses: ./.github/actions/common_setup

      - name: Deploy APK in Firebase App Distribution
        uses: ./.github/actions/deploy_in_firebase
        with:
          buildType: ${{ matrix.buildType }}
          googleApplicationCredentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

  status:
    needs: [ assemble, test, instrumental-test, reports ]
    if: success()
    name: Status
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: 'true'
